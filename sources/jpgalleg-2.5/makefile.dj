#
#	JPGalleg 2.5, by Angelo Mottola, 2000-2004
#
#	DJGPP specific makefile rules
#


PLATFORM = djgpp
PLATFORM_PATH = djgpp
EXE = .exe
OBJ = .o

ifeq "$(COMSPEC)" ""
ifdef ComSpec
COMSPEC = $(ComSpec)
endif
endif
SHELL = $(COMSPEC)

CC = gcc
OFLAGS = -mpentium -O2 -ffast-math -fomit-frame-pointer
CFLAGS = -c -s -I./include $(OFLAGS) -Wall -W

LIB = ar
LFLAGS = rs

ECHO = @$(COMSPEC) /C echo $(1)
CP = @$(COMSPEC) /C copy
MV = @$(COMSPEC) /C move
RM = @$(COMSPEC) /C del

LIB_NAME = libjpgal.a

LIBS = -lalleg


.PHONY: baddjgpp baddjdev badgcc badbnu badmake badpath

# -------- check that the DJGPP environment variable is set --------

ifndef DJDIR
baddjgpp:
	@echo Your DJDIR environment variable is not set correctly! It should
	@echo point to the djgpp.env file: see the djgpp readme.1st for details.
endif

DJDIR_U = $(subst \,/,$(DJDIR))
DJDIR_D = $(subst /,\,$(DJDIR))


# -------- check that the djdev package is installed --------

ifeq ($(wildcard $(DJDIR_U)/bin/djasm.exe),)
baddjdev:
	@echo Missing djgpp package! You need to install djdev203.zip (or whatever the
	@echo latest version is). Download this from wherever you got djgpp, and unzip
	@echo it into the root of your djgpp directory.
endif


# -------- check that the gcc package is installed --------

ifeq ($(wildcard $(DJDIR_U)/bin/gcc.exe),)
badgcc:
	@echo Missing djgpp package! You need to install gcc2952b.zip (or whatever the
	@echo latest version is). Download this from wherever you got djgpp, and unzip
	@echo it into the root of your djgpp directory.
endif


# -------- check that the binutils package is installed --------

ifeq ($(wildcard $(DJDIR_U)/bin/ld.exe),)
badbnu:
	@echo Missing djgpp package! You need to install bnu210b.zip (or whatever the
	@echo latest version is). Download this from wherever you got djgpp, and unzip
	@echo it into the root of your djgpp directory.
endif


# -------- check that the make package is installed --------

ifeq ($(wildcard $(DJDIR_U)/bin/make.exe),)
badmake:
	@echo Missing djgpp package! You need to install mak3791b.zip (or whatever the
	@echo latest version is). Download this from wherever you got djgpp, and unzip
	@echo it into the root of your djgpp directory.
endif


# -------- check that djgpp/bin is pathed --------

ifeq ($(wildcard $(addsuffix /djasm.exe,$(subst ;, ,$(PATH)))),)
badpath:
	@echo Your PATH is not set correctly! This must include the
	@echo djgpp bin directory: see the djgpp readme.1st for details.
endif



.PHONY: _all

_all: all



$(DJDIR_U)/lib/$(LIB_NAME): lib/djgpp/$(LIB_NAME)
	$(CP) lib\djgpp\$(LIB_NAME) $(DJDIR_D)\lib
$(DJDIR_U)/include/jpgalleg.h: include/jpgalleg.h
	$(CP) include\jpgalleg.h $(DJDIR_D)\include

INSTALL_FILES = $(DJDIR_U)/lib/$(LIB_NAME) $(DJDIR_U)/include/jpgalleg.h

install: $(INSTALL_FILES)
	$(call ECHO,JPGalleg for $(PLATFORM) has been successfully installed.)

uninstall:
	$(RM) $(DJDIR_D)\lib\$(LIB_NAME)
	$(RM) $(DJDIR_D)\include\jpgalleg.h
ifdef ALLEGRO
	$(call REMOVE_PLUGIN_DOS)
else
	$(call ECHO,Cannot remove grabber plugin: ALLEGRO environmental variable not set)
endif
	$(call ECHO,All gone!)


mmxtest:
	- $(call ECHO,\> mmx.h)
	- $(call ECHO,.text \> mmxtest.s)
	- $(call ECHO,emms \>\> mmxtest.s)
	- @$(CC) -c mmxtest.s -o obj/djgpp/mmxtest.o
	$(call ECHO,\#define JPGALLEG_MMX \> mmx.h)

include/mmx.h:
	$(call ECHO,Testing for MMX assembler support...)
	@-$(MAKE) mmxtest --quiet
	$(MV) mmx.h include
	$(RM) mmxtest.s
